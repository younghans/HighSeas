{
  "rules": {
    "players": {
      ".read": "auth != null",
      "$uid": {
        ".read": "auth != null",
        ".write": "auth != null && auth.uid === $uid",
        ".validate": "(!newData.hasChild('gold') || data.child('gold').val() === newData.child('gold').val()) && (!newData.hasChild('health') || data.child('health').val() === newData.child('health').val() || !data.hasChild('health'))",
        "gold": {
          ".read": "auth != null",
          ".write": false
        }
      }
    },
    "shipwrecks": {
      ".read": "auth != null",
      ".write": "auth != null"
    },
    "enemyShips": {
      ".read": "auth != null",
      ".write": "auth != null"
    },
    "combatEvents": {
      ".read": "auth != null",
      ".write": "auth != null",
      ".indexOn": "timestamp",
      "$eventId": {
        ".validate": "!data.exists() || newData.child('timestamp').val() >= (data.child('timestamp').val() - 30000)"
      }
    },
    "chat": {
      "messages": {
        ".read": "auth != null",
        ".write": "auth != null",
        ".indexOn": "timestamp",
        "$messageId": {
          ".validate": "newData.hasChildren(['playerName', 'message', 'timestamp'])",
          "playerName": {
            ".validate": "newData.isString() && newData.val().length <= 50"
          },
          "message": {
            ".validate": "newData.isString() && newData.val().length <= 500"
          },
          "timestamp": {
            ".validate": "newData.isNumber()"
          }
        }
      }
    },
    "profanityList": {
      ".read": "auth != null",
      ".write": false
    }
  }
} 